// Copyright 2017 Mathias Bynens. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
author: Mathias Bynens
description: >
  Unicode property escapes for `General_Category=Final_Punctuation`
info: |
  Generated by https://github.com/mathiasbynens/unicode-property-escapes-tests
  Unicode v9.0.0
esid: sec-static-semantics-unicodematchproperty-p
features: [regexp-unicode-property-escapes]
includes: [buildString.js]
---*/

const matchSymbols = buildString({
  loneCodePoints: [
    0x0000BB,
    0x002019,
    0x00201D,
    0x00203A,
    0x002E03,
    0x002E05,
    0x002E0A,
    0x002E0D,
    0x002E1D,
    0x002E21
  ],
  ranges: []
});
assert(
  /^\p{General_Category=Final_Punctuation}+$/u.test(matchSymbols),
  "`\\p{General_Category=Final_Punctuation}` matches all proper symbols"
);
assert(
  /^\p{General_Category=Pf}+$/u.test(matchSymbols),
  "`\\p{General_Category=Pf}` matches all proper symbols"
);
assert(
  /^\p{gc=Final_Punctuation}+$/u.test(matchSymbols),
  "`\\p{gc=Final_Punctuation}` matches all proper symbols"
);
assert(
  /^\p{gc=Pf}+$/u.test(matchSymbols),
  "`\\p{gc=Pf}` matches all proper symbols"
);
assert(
  /^\p{Final_Punctuation}+$/u.test(matchSymbols),
  "`\\p{Final_Punctuation}` matches all proper symbols"
);
assert(
  /^\p{Pf}+$/u.test(matchSymbols),
  "`\\p{Pf}` matches all proper symbols"
);

const nonMatchSymbols = buildString({
  loneCodePoints: [
    0x002E04
  ],
  ranges: [
    [0x00DC00, 0x00DFFF],
    [0x000000, 0x0000BA],
    [0x0000BC, 0x002018],
    [0x00201A, 0x00201C],
    [0x00201E, 0x002039],
    [0x00203B, 0x002E02],
    [0x002E06, 0x002E09],
    [0x002E0B, 0x002E0C],
    [0x002E0E, 0x002E1C],
    [0x002E1E, 0x002E20],
    [0x002E22, 0x00DBFF],
    [0x00E000, 0x10FFFF]
  ]
});
assert(
  /^\P{General_Category=Final_Punctuation}+$/u.test(nonMatchSymbols),
  "`\\P{General_Category=Final_Punctuation}` matches all proper symbols"
);
assert(
  /^\P{General_Category=Pf}+$/u.test(nonMatchSymbols),
  "`\\P{General_Category=Pf}` matches all proper symbols"
);
assert(
  /^\P{gc=Final_Punctuation}+$/u.test(nonMatchSymbols),
  "`\\P{gc=Final_Punctuation}` matches all proper symbols"
);
assert(
  /^\P{gc=Pf}+$/u.test(nonMatchSymbols),
  "`\\P{gc=Pf}` matches all proper symbols"
);
assert(
  /^\P{Final_Punctuation}+$/u.test(nonMatchSymbols),
  "`\\P{Final_Punctuation}` matches all proper symbols"
);
assert(
  /^\P{Pf}+$/u.test(nonMatchSymbols),
  "`\\P{Pf}` matches all proper symbols"
);
