// Copyright 2017 Mathias Bynens. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
author: Mathias Bynens
description: >
  Unicode property escapes for `Script=Cuneiform`
info: |
  Generated by https://github.com/mathiasbynens/unicode-property-escapes-tests
  Unicode v9.0.0
esid: sec-static-semantics-unicodematchproperty-p
features: [regexp-unicode-property-escapes]
includes: [buildString.js]
---*/

const matchSymbols = buildString({
  loneCodePoints: [],
  ranges: [
    [0x012000, 0x012399],
    [0x012400, 0x01246E],
    [0x012470, 0x012474],
    [0x012480, 0x012543]
  ]
});
assert(
  /^\p{Script=Cuneiform}+$/u.test(matchSymbols),
  "`\\p{Script=Cuneiform}` matches all proper symbols"
);
assert(
  /^\p{Script=Xsux}+$/u.test(matchSymbols),
  "`\\p{Script=Xsux}` matches all proper symbols"
);
assert(
  /^\p{sc=Cuneiform}+$/u.test(matchSymbols),
  "`\\p{sc=Cuneiform}` matches all proper symbols"
);
assert(
  /^\p{sc=Xsux}+$/u.test(matchSymbols),
  "`\\p{sc=Xsux}` matches all proper symbols"
);

const nonMatchSymbols = buildString({
  loneCodePoints: [
    0x01246F
  ],
  ranges: [
    [0x00DC00, 0x00DFFF],
    [0x000000, 0x00DBFF],
    [0x00E000, 0x011FFF],
    [0x01239A, 0x0123FF],
    [0x012475, 0x01247F],
    [0x012544, 0x10FFFF]
  ]
});
assert(
  /^\P{Script=Cuneiform}+$/u.test(nonMatchSymbols),
  "`\\P{Script=Cuneiform}` matches all proper symbols"
);
assert(
  /^\P{Script=Xsux}+$/u.test(nonMatchSymbols),
  "`\\P{Script=Xsux}` matches all proper symbols"
);
assert(
  /^\P{sc=Cuneiform}+$/u.test(nonMatchSymbols),
  "`\\P{sc=Cuneiform}` matches all proper symbols"
);
assert(
  /^\P{sc=Xsux}+$/u.test(nonMatchSymbols),
  "`\\P{sc=Xsux}` matches all proper symbols"
);
