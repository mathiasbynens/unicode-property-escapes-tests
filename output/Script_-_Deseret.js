// Copyright 2017 Mathias Bynens. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
author: Mathias Bynens
description: >
  Unicode property escapes for `Script=Deseret`
info: |
  Generated by https://github.com/mathiasbynens/unicode-property-escapes-tests
  Unicode v9.0.0
esid: sec-static-semantics-unicodematchproperty-p
features: [regexp-unicode-property-escapes]
includes: [buildString.js]
---*/

const matchSymbols = buildString({
  loneCodePoints: [],
  ranges: [
    [0x010400, 0x01044F]
  ]
});
assert(
  /^\p{Script=Deseret}+$/u.test(matchSymbols),
  "`\\p{Script=Deseret}` matches all proper symbols"
);
assert(
  /^\p{Script=Dsrt}+$/u.test(matchSymbols),
  "`\\p{Script=Dsrt}` matches all proper symbols"
);
assert(
  /^\p{sc=Deseret}+$/u.test(matchSymbols),
  "`\\p{sc=Deseret}` matches all proper symbols"
);
assert(
  /^\p{sc=Dsrt}+$/u.test(matchSymbols),
  "`\\p{sc=Dsrt}` matches all proper symbols"
);

const nonMatchSymbols = buildString({
  loneCodePoints: [],
  ranges: [
    [0x00DC00, 0x00DFFF],
    [0x000000, 0x00DBFF],
    [0x00E000, 0x0103FF],
    [0x010450, 0x10FFFF]
  ]
});
assert(
  /^\P{Script=Deseret}+$/u.test(nonMatchSymbols),
  "`\\P{Script=Deseret}` matches all proper symbols"
);
assert(
  /^\P{Script=Dsrt}+$/u.test(nonMatchSymbols),
  "`\\P{Script=Dsrt}` matches all proper symbols"
);
assert(
  /^\P{sc=Deseret}+$/u.test(nonMatchSymbols),
  "`\\P{sc=Deseret}` matches all proper symbols"
);
assert(
  /^\P{sc=Dsrt}+$/u.test(nonMatchSymbols),
  "`\\P{sc=Dsrt}` matches all proper symbols"
);
