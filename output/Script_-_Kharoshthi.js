// Copyright 2017 Mathias Bynens. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
author: Mathias Bynens
description: >
  Unicode property escapes for `Script=Kharoshthi`
info: |
  Generated by https://github.com/mathiasbynens/unicode-property-escapes-tests
  Unicode v9.0.0
esid: sec-static-semantics-unicodematchproperty-p
features: [regexp-unicode-property-escapes]
---*/

const buildString = ({ loneCodePoints, ranges }) => {
	let result = String.fromCodePoint(...loneCodePoints);
	for (const [start, end] of ranges) {
		for (let codePoint = start; codePoint <= end; codePoint++) {
			result += String.fromCodePoint(codePoint);
		}
	}
	return result;
};

const matchSymbols = buildString({
	loneCodePoints: [],
	ranges: [
		[0x010A00, 0x010A03],
		[0x010A05, 0x010A06],
		[0x010A0C, 0x010A13],
		[0x010A15, 0x010A17],
		[0x010A19, 0x010A33],
		[0x010A38, 0x010A3A],
		[0x010A3F, 0x010A47],
		[0x010A50, 0x010A58]
	]
});
assert(
	/^\p{Script=Kharoshthi}+$/u.test(matchSymbols),
	"`\\p{Script=Kharoshthi}` matches all proper symbols"
);
assert(
	/^\p{Script=Khar}+$/u.test(matchSymbols),
	"`\\p{Script=Khar}` matches all proper symbols"
);
assert(
	/^\p{sc=Kharoshthi}+$/u.test(matchSymbols),
	"`\\p{sc=Kharoshthi}` matches all proper symbols"
);
assert(
	/^\p{sc=Khar}+$/u.test(matchSymbols),
	"`\\p{sc=Khar}` matches all proper symbols"
);

const nonMatchSymbols = buildString({
	loneCodePoints: [
		0x010A04,
		0x010A14,
		0x010A18
	],
	ranges: [
		[0x000000, 0x0109FF],
		[0x010A07, 0x010A0B],
		[0x010A34, 0x010A37],
		[0x010A3B, 0x010A3E],
		[0x010A48, 0x010A4F],
		[0x010A59, 0x10FFFF]
	]
});
assert(
	/^\P{Script=Kharoshthi}+$/u.test(nonMatchSymbols),
	"`\\P{Script=Kharoshthi}` matches all proper symbols"
);
assert(
	/^\P{Script=Khar}+$/u.test(nonMatchSymbols),
	"`\\P{Script=Khar}` matches all proper symbols"
);
assert(
	/^\P{sc=Kharoshthi}+$/u.test(nonMatchSymbols),
	"`\\P{sc=Kharoshthi}` matches all proper symbols"
);
assert(
	/^\P{sc=Khar}+$/u.test(nonMatchSymbols),
	"`\\P{sc=Khar}` matches all proper symbols"
);
