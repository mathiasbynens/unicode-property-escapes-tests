// Copyright <% print(new Date().getFullYear()) %> Mathias Bynens. All rights reserved.
// This code is governed by the BSD license found in the LICENSE file.

/*---
author: Mathias Bynens
description: >
  Unicode property escapes for `<%= mainExpression %>`
info: |
  Generated by https://github.com/mathiasbynens/unicode-property-escapes-tests
  Unicode v<%= unicodeVersion %>
  Emoji v<%= emojiVersion %> (UTR51)
esid: sec-static-semantics-unicodematchproperty-p
features: [regexp-unicode-property-escapes]
includes: [regExpUtils.js]
---*/

const matchSymbols = buildString(<%= matchSymbols %>);
<% for (const expression of expressions) { %>testPropertyEscapes(
  /^\p{<%= expression %>}+$/u,
  matchSymbols,
  "\\p{<%= expression %>}"
);
<% } %>
<% if (nonMatchSymbols) { %>
const nonMatchSymbols = buildString(<%= nonMatchSymbols %>);
<%
  for (const expression of expressions) {
%>testPropertyEscapes(
  /^\P{<%= expression %>}+$/u,
  nonMatchSymbols,
  "\\P{<%= expression %>}"
);
<%
  }
} else {
  for (const expression of expressions) {
%>assert(
  !/\P{<%= expression %>}/u.test(""),
  "`\\P{<%= expression %>}` should match nothing (not even the empty string)"
);
<%
  }
}
%>
